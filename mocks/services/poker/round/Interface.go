// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import (
	models "github.com/jonsch318/royalafg/services/poker/models"
	mock "github.com/stretchr/testify/mock"
)

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// Leave provides a mock function with given fields: id
func (_m *Interface) Leave(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Start provides a mock function with given fields: players, publicPlayers, dealer
func (_m *Interface) Start(players []models.Player, publicPlayers []models.PublicPlayer, dealer int) {
	_m.Called(players, publicPlayers, dealer)
}

// NewInterface creates a new instance of Interface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *Interface {
	mock := &Interface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
