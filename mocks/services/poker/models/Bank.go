// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	money "github.com/Rhymond/go-money"
)

// Bank is an autogenerated mock type for the Bank type
type Bank struct {
	mock.Mock
}

// GetMaxBet provides a mock function with given fields: _a0
func (_m *Bank) GetMaxBet(_a0 string) *money.Money {
	ret := _m.Called(_a0)

	var r0 *money.Money
	if rf, ok := ret.Get(0).(func(string) *money.Money); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*money.Money)
		}
	}

	return r0
}

// GetPlayerWallet provides a mock function with given fields: _a0
func (_m *Bank) GetPlayerWallet(_a0 string) *money.Money {
	ret := _m.Called(_a0)

	var r0 *money.Money
	if rf, ok := ret.Get(0).(func(string) *money.Money); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*money.Money)
		}
	}

	return r0
}

// NewBank creates a new instance of Bank. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBank(t interface {
	mock.TestingT
	Cleanup(func())
}) *Bank {
	mock := &Bank{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
