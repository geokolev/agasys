// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import (
	dto "github.com/jonsch318/royalafg/services/search-elastic/pkg/dto"

	mock "github.com/stretchr/testify/mock"
)

// GameSearch is an autogenerated mock type for the GameSearch type
type GameSearch struct {
	mock.Mock
}

// SearchGames provides a mock function with given fields: query
func (_m *GameSearch) SearchGames(query string) []dto.GameResult {
	ret := _m.Called(query)

	var r0 []dto.GameResult
	if rf, ok := ret.Get(0).(func(string) []dto.GameResult); ok {
		r0 = rf(query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]dto.GameResult)
		}
	}

	return r0
}

// NewGameSearch creates a new instance of GameSearch. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGameSearch(t interface {
	mock.TestingT
	Cleanup(func())
}) *GameSearch {
	mock := &GameSearch{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
