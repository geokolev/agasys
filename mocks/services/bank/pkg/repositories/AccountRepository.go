// Code generated by mockery v2.7.4. DO NOT EDIT.

package mocks

import (
	aggregates "github.com/JohnnyS318/RoyalAfgInGo/services/bank/pkg/aggregates"
	mock "github.com/stretchr/testify/mock"

	ycq "github.com/jetbasrawi/go.cqrs"
)

// AccountRepository is an autogenerated mock type for the AccountRepository type
type AccountRepository struct {
	mock.Mock
}

// Load provides a mock function with given fields: _a0, _a1
func (_m *AccountRepository) Load(_a0 string, _a1 string) (*aggregates.Account, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *aggregates.Account
	if rf, ok := ret.Get(0).(func(string, string) *aggregates.Account); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*aggregates.Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: _a0, _a1
func (_m *AccountRepository) Save(_a0 ycq.AggregateRoot, _a1 *int) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(ycq.AggregateRoot, *int) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
