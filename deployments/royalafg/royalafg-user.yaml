apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  selector:
    app: redis
    role: master
    tier: backend
  ports:
  - port: 6379
    targetPort: 6379
    name: client
---
apiVersion: apps/v1  # API version
kind: Deployment
metadata:
  name: redis-master # Unique name for the deployment
  labels:
    app: redis       # Labels to be applied to this deployment
spec:
  selector:
    matchLabels:     # This deployment applies to the Pods matching these labels
      app: redis
      role: master
      tier: backend
  replicas: 1        # Run a single pod in the deployment
  template:          # Template for the pods that will be created by this deployment
    metadata:
      annotations:
        "consul.hashicorp.com/connect-inject": "true"
        "consul.hashicorp.com/connect-service": "redis"
      labels:        # Labels to be applied to the Pods in this deployment
        app: redis
        role: master
        tier: backend
    spec:            # Spec for the container which will be run inside the Pod.
      containers:
      - name: master
        image: redis
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
          limits:
            cpu: 25m
            memory: 50Mi
        ports:
        - containerPort: 6379
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: royalafg-user
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/api/user`)
      kind: Rule
      services:
        - name: royalafg-user
          port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: royalafg-user
spec:
  selector:
    app: royalafg-user
  ports:
    - name: grpc
      port: 5001
      targetPort: 5001
    - name: http
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: royalafg-user
data:
  config.yaml: |
    grpc_port: 5001
    http_port: 8080
    mongodb_url: mongodb://admin:admin@localhost:27017
    jwt_signing_key: testsecret
    redis_address: localhost:6379
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: royalafg-user
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: royalafg-user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: royalafg-user
  template:
    metadata:
      annotations:
        "consul.hashicorp.com/connect-inject": "true"
        "consul.hashicorp.com/connect-service-upstreams": "redis:6379"

        "consul.hashicorp.com/sidecar-proxy-cpu-request": "10m"
        "consul.hashicorp.com/sidecar-proxy-cpu-limit": "25m"
        "consul.hashicorp.com/sidecar-proxy-memory-request": "20Mi"
        "consul.hashicorp.com/sidecar-proxy-memory-limit": "50Mi"
        
        "vault.hashicorp.com/agent-limits-cpu": "200m"
        "vault.hashicorp.com/agent-limits-mem": "100Mi"
        "vault.hashicorp.com/agent-requests-cpu": "20m"
        "vault.hashicorp.com/agent-requests-mem": "25Mi"
        
        "vault.hashicorp.com/agent-inject": "true"
        "vault.hashicorp.com/agent-inject-secret-mongodb.yaml": "kv-v2/royalafg-user-mongo"
        "vault.hashicorp.com/agent-inject-template-mongodb.yaml": |
          {{- with secret "kv-v2/royalafg-user-mongo" -}}
          mongodb_url: {{.Data.data.url}}
          {{- end }}
        "vault.hashicorp.com/agent-inject-secret-session.yaml": "kv-v2/session-secret"
        "vault.hashicorp.com/agent-inject-template-session.yaml": |
          {{- with secret "kv-v2/session-secret" -}}
          jwt_signing_key: {{.Data.data.secret}}
          {{- end }}
        "vault.hashicorp.com/role": user-role
      labels:
        app: royalafg-user
    spec:
      serviceAccountName: royalafg-user
      containers:
        - name: royalafg-user
          imagePullPolicy: Always
          image: docker.io/johnnys318/royalafg_user:latest
          resources:
            requests:
              memory: 20Mi
              cpu: 10m
            limits:
              cpu: 25m
              memory: 50Mi
          ports:
            - containerPort: 5001
              name: grpc
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: royalafg-user-config
              mountPath: "/etc/royalafg-user" 

      volumes:
        - name:  royalafg-user-config
          configMap:
              name: royalafg-user